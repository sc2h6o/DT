name: "ZF"
layer {
    name: 'data'
    type: 'Python'
    top: 'data'
    top: 'labels'
    top: 'labels_seg'
    python_param {
    module: 'conv_data_layer.layer'
    layer: 'DataLayer'
    param_str: "'data': {'channels': 3, 'height': 224, 'width': 224}"
    }
}

#========= conv1-conv5 ============

layer {
    name: "conv1_new"
    type: "Convolution"
    bottom: "data"
    top: "conv1_new"
    param { lr_mult: 1.0 }
    param { lr_mult: 2.0 }
    convolution_param {
        num_output: 96
        kernel_size: 5
        pad: 2
        stride: 2
    }
}
layer {
    name: "relu1"
    type: "ReLU"
    bottom: "conv1_new"
    top: "conv1_new"
}
layer {
    name: "norm1"
    type: "LRN"
    bottom: "conv1_new"
    top: "norm1"
    lrn_param {
        local_size: 3
        alpha: 0.00005
        beta: 0.75
        norm_region: WITHIN_CHANNEL
    }
}
layer {
    name: "pool1"
    type: "Pooling"
    bottom: "norm1"
    top: "pool1"
    pooling_param {
        kernel_size: 3
        stride: 1
        pad: 1
        pool: MAX
    }
}
layer {
    name: "conv2"
    type: "Convolution"
    bottom: "pool1"
    top: "conv2"
    param { lr_mult: 0.1 }
    param { lr_mult: 0.2 }
    convolution_param {
        num_output: 256
        kernel_size: 5
        pad: 4
        stride: 2
        dilation: 2
    }
}
layer {
    name: "relu2"
    type: "ReLU"
    bottom: "conv2"
    top: "conv2"
}
layer {
    name: "norm2"
    type: "LRN"
    bottom: "conv2"
    top: "norm2"
    lrn_param {
        local_size: 5
        alpha: 0.00005
        beta: 0.75
        norm_region: WITHIN_CHANNEL
    }
}
layer {
    name: "pool2"
    type: "Pooling"
    bottom: "norm2"
    top: "pool2"
    pooling_param {
        kernel_size: 5
        stride: 1
        pad: 2
        pool: MAX
    }
}
layer {
    name: "conv3"
    type: "Convolution"
    bottom: "pool2"
    top: "conv3"
    param { lr_mult: 0.1 }
    param { lr_mult: 0.2 }
    convolution_param {
        num_output: 384
        kernel_size: 3
        pad: 4
        stride: 1
        dilation: 4
    }
}
layer {
    name: "relu3"
    type: "ReLU"
    bottom: "conv3"
    top: "conv3"
}
layer {
    name: "conv4"
    type: "Convolution"
    bottom: "conv3"
    top: "conv4"
    param { lr_mult: 0.1 }
    param { lr_mult: 0.2 }
    convolution_param {
        num_output: 384
        kernel_size: 3
        pad: 4
        stride: 1
        dilation: 4
    }
}
layer {
    name: "relu4"
    type: "ReLU"
    bottom: "conv4"
    top: "conv4"
}
layer {
    name: "conv5"
    type: "Convolution"
    bottom: "conv4"
    top: "conv5"
    param { lr_mult: 0.1 }
    param { lr_mult: 0.2 }
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 4
        stride: 1
        dilation: 4
    }
}
layer {
    name: "relu5"
    type: "ReLU"
    bottom: "conv5"
    top: "conv5"
}

layer {
    name: "concat"
    type: "Concat"
    bottom: "conv3"
    bottom: "conv5"
    top: "feat"
    concat_param{
        axis:1
    }
}

layer {
    name: "conv6"
    type: "Convolution"
    bottom: "feat"
    top: "conv6"
    param { lr_mult: 1.0 }
    param { lr_mult: 2.0 }
    convolution_param {
        num_output: 256
        kernel_size: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "relu6"
    type: "ReLU"
    bottom: "conv6"
    top: "conv6"
}

layer {
    name: "conv7"
    type: "Convolution"
    bottom: "conv6"
    top: "conv7"
    param { lr_mult: 1.0 }
    param { lr_mult: 2.0 }
    convolution_param {
        num_output: 256
        kernel_size: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "relu7"
    type: "ReLU"
    bottom: "conv7"
    top: "conv7"
}

layer {
    name: "score"
    type: "Deconvolution"
    bottom: "conv7"
    top: "score"
    param { lr_mult: 1.0 }
    param { lr_mult: 2.0 }
    convolution_param {
        num_output: 2
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
    name: "score_seg"
    type: "Deconvolution"
    bottom: "conv7"
    top: "score_seg"
    param { lr_mult: 1.0 }
    param { lr_mult: 2.0 }
    convolution_param {
        num_output: 2
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
    name: "loss"
    type: "SoftmaxWithLoss"
    bottom: "score"
    bottom: "labels"
    propagate_down: 1
    propagate_down: 0
    top: "loss"
    loss_weight: 1
    loss_param {
    ignore_label: -1
    normalize: true
    }
}

layer {
    name: "loss_seg"
    type: "SoftmaxWithLoss"
    bottom: "score_seg"
    bottom: "labels_seg"
    propagate_down: 1
    propagate_down: 0
    top: "loss_seg"
    loss_weight: 0.0
    loss_param {
    ignore_label: -1
    normalize: true
    }
}